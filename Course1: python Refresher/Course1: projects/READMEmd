## There are 2 project descriptions in this readme first project is an expense tracker, second is the task manager project!

## Project 1: Expense Tracker

## file structure project 1
expense_tracker.py
README.md
expenses.csv  # created at runtime

# Personal Expense Tracker

A command-line Python application that helps users log, categorize, and track their personal expenses. This tool supports setting monthly budgets, viewing expenses, and saving/loading data to and from a file for persistent usage.



## Objectives

1. Enable users to add and manage daily expenses.
2. Categorize expenses (e.g., Food, Travel, etc.).
3. Set and track monthly spending budgets.
4. Support persistent storage via file handling (CSV).
5. Provide a user-friendly, interactive menu interface.

## Features

# Personal Expense Tracker


The Personal Expense Tracker allows users to:
- Enter expenses with a date, category, amount, and description
- Set a monthly budget and track spending against it
- Save and load expense data from a CSV file
- View all expenses in a formatted display
- Interact with the system via a simple terminal-based menu

---

## How the Program Works

When the script is run:
1. It attempts to load any previously saved expenses from a CSV file.
2. The user is prompted to enter their monthly budget.
3. A menu is displayed with options to:
   - Add an expense
   - View all expenses
   - Track the budget
   - Save expenses
   - Exit the program

Each menu option triggers the appropriate function, and all data is saved upon exiting the program.

---

## How to Run

1. Ensure you have Python 3 installed.
2. Save the main script as `expense_tracker.py`.
3. Open your terminal and navigate to the directory containing the script.
4. Run the script using:
   ```zsh
   python expense_tracker.py

## Project 2
## file structure for project 2

task_manager.py         # Main Python script
users.json              # Stores hashed user credentials
tasks.json              # Stores user tasks
README.md               # Documentation

# Task Manager with User Authentication (Python CLI App)

This is a terminal-based Python application that allows users to manage their personal tasks securely. Each user must register and log in to access their own task list. User credentials are securely stored using SHA-256 hashing via Python's `hashlib` module. Tasks are stored per user and saved persistently using JSON files.

---

## Features

- **Secure User Registration and Login**
  - Passwords are hashed using SHA-256
  - User credentials stored in `users.json`

- **Task Management**
  - Add new tasks (auto-assigned unique ID)
  - View existing tasks
  - Mark tasks as completed
  - Delete tasks by ID
  - Task data stored in `tasks.json` and isolated by user

- **Menu-Driven Interface**
  - Clean terminal UI
  - Persistent loop until user logs out
  - Clear prompts and error handling

---

## How to Run 

1. Ensure you have Python 3 installed.
2. Save the code in a file, e.g., `task_manager.py`
3. Run the script in your terminal:

```bash
python task_manager.py


